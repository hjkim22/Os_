# 운영체제

사용자의 하드웨어, 시스템 리소스를 제어하고 프로그램에 대한 일반적 서비를 지원하는 시스템 소프트웨어.
시스템 하드웨어를 관리할 뿐 아니라 응용 소프트웨어를 실행하기 위하여 하드웨어 추상화 플랫폼과 공통 시스템 서비스를 제공.
'플랫폼 소프트웨어'라고 부르기도함.


# 운영체재의 대표적인 역할들
- 프로세스 관리: 시스템 내에서 실행 중인 프로세스를 효율적으로 관리하고 제어
- 메모리 관리: 사용자가 사용할 다양한 데이터를 메모리에 적절하게 배치
- 파일 시스템 관리: 사용자 및 응용 프로그램이 데이터를 효율적으로 저장, 관리 및 엑세스


# 운영체제의 구조
- 응용프로그램: 운영체제와 시스템 콜을 통해 하드웨어와 상호작용
- 시스템 콜: 시스템 콜을 호출하여 운영체제에게 특정 작업을 요청
- 운영체제: 사용자 및 응용 프로그램에게 서비스를 제공
- 커널: 시스템 콜을 처리하고, 하드웨어와 상호작용하며, 프로세스 및 자원 관리 등의 기능을 담당
    - CLI: 텍스트 기반 인터페이스, 사용자가 명령어를 입력하여 컴퓨터와 상호작용
    - GUI: 그래픽 기반 인터페이스, 사용자가 마우스를 사용하여 그래픽 요소를 클릭하고 조작
- 하드웨어: 운영체제와 응용 프로그램이 실행되고 동작하는 데 필요한 리소스를 제공
- 드라이버: 특정 하드웨어 장치를 제어하고 관리


# 컴퓨터 하드웨어 구성
- CPU: 중앙 처리 장치, 컴퓨터의 연산과 제어를 담당
    - ALU: 산술 논리 장치, 산술 연산과 논리 연산을 수행
    - CU: 제어 장치, 명령어의 해독과 실행을 조정
    - Register Set: CPU 내부에 있는 레지스터, 데이터나 주소 등을 일시적으로 저장
- Main Memory: 주 기억 장치, 프로그램과 데이터를 저장하며 CPU에 빠르게 접근
- 버스 시스템: 데이터, 주소, 제어 신호 등을 전송하기 위한 통신 경로, CPU, 메모리, 입출력 장치 간의 데이터 전달


# CPU -> 주요 레지스터
- 프로그램 카운터: 메모리에서 가져와서 실행할 다음 명령의 주소를 일시적으로 저장하는 레지스터
- 인스트럭션 레지스터: 해석해야할 명령어를 저장하는 레지스터
- 어드레스 레지스터: 메모리에 주소를 저장하는 레지스터
- 버퍼 레지스터: 메모리에 읽거나 쓰려는 데이터나 명령을 일시적으로 저장하는 레지스터
- 플래그 레지스터: 연산결과, CPU 상태에 대한 부가적인 정보를 저장하는 레지스터
- 스택 포인터: 다음 써야할 데이터가 어디있는지 알려줌


# 클럭 펄스
- 컴퓨터 시스템에서 클럭 펄스는 CPU의 작업 속도를 결정하고, 명령어의 실행 및 데이터 전송을 동기화


# 프로그램의 실행과정
- 프로그램 코드 > 어셈블리 코드 > 바이너리 코드
    - 바이너리 실행코드
    > 실행파일이 생성 > 보조메모리에 저장 > 실행 > 메인 메모리 > CPU에 의해 순차적으로 실행 > 아래 세가지로 수행
    > 1. Fetch: 메모리상에 존재하는 명령어를 CPU로 가져오는 작업
    > 2. Decode: 가져온 명령어를 CPU가 해석 (CU가 그역할을 담당)
    > 3. Execution: 해석된 명령어의 명령대로 CPU가 작업을 수행


# 데이터 이동 (시스템 버스)
- 데이터 버스: 데이터 이동을 위해 필요한 버스
- 컨트롤 버스: CPU가 원하는 바를 메모리에 전달하기 위한 버스
- 어드레스 버스: 주소값을 이동하기 위해 필요한 버스



# 인터럽트
- CPU가 어떤 작업을 수행하고 있을때 CPU의 작업을 방해하는 신호

# 하드웨어 인터럽트
- 입출력 장치(하드웨어)로부터 발생하는 인터럽트는 '비동기 입터럽트'라고 표현

# 인터럽트 핸들링
- 인터럽트가 발생하면, 인터럽트에 대응하는 무언가가 동작, 이를 '인터럽트 서비스 루틴'이라 표현

# 인터럽스 서비스 루틴
- 인터럽트를 처리하기 위해 특정 인터럽트 신호에 대해 미리 정의되어 있는 프로그램 또는 함수이다.


# 프로세스
'실행 중인 프로그램'
실행 파일 > 프로그램 / 실행된 파일 > 프로세스
운영체제가 관리하는 하나의 객체라고 할 수 있음


# 프로세스 구조
- 명령어가 담긴 코드 영역
- 전역변수 등이 담긴 데이터 영역
- 지역변수 등이 담긴 스택 영역
- 동적 메모리 할당을 위한 힙 영역


# Process Control Block
- CPU는 한 번에 하나의 연산만 수행
- CPU는 여러 개의 프로세스를 동시에 실행하지 않고, 빠르게 번갈아 가며 실행
- 운영체제는 프로세스 컨트롤 블록, PCB를 만들어 관리
    - 여기에는 프로세스를 식별하기 위해 필요한 정보들이 저장됨
    - 프로세스 ID, 레지스터 데이터, 스케줄링 정보, 상태 등


# 멀티 프로세스 운영체제
- 여러 개의 프로세스를 관리해가며, 마치 동시에 실행되는 것처럼 운영할 수 있는 운영체제
    - 여러 개의 프로세스를 관리하는 것은 운영체제에게 부담되는 일이다.


# 컨텍스트 스위칭
- 프로세스를 실행하는중에 다른 프로세스를 실행하기 위해 실행중인 프로세스 상태를 저장하고 다른 프로세스의 데이터로 교체하는 방법(문맥교환)


# 프로세스 생성
- 새로운 프로세스를 생성하는 것보다, 기존 프로세스를 복사하는것이 더 빠르다. 따라서 모든 프로세스는 최초의 프로세스로부터 복사된다.


# 스레드(Thread)
- 프로세스를 존재하는 프로세스 구성원으로 프로세스가 처리하는 작업의 실행단위
- 스레드는 프로세스 안에 여러개 존재 가능
# 스레드 특징
- 스레드가 하나 생성될 때마다 스레드를 위한 스택 영역이 추가로 생성될뿐, 그 외 영역은 프로세스의 영역을 공유
- 프로세스가 처리해야 할 작업을 수행하기 위해 존재하는것이므로, 코드 영역을 공유해 명령어에 접근할 수 있어야 한다.
- 명령어 실행 시 전역변수, 정적변수, 지역변수 등의 데이터에 접근해야 하므로 데이터 영역과 힙 영역도 공유해야 한다.
